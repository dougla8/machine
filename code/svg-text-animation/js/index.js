(function() {
  $(document).ready(function() {
    var lg, pathStartPoint, rotateWe, step, steps, stepsflag, transition, transitionCircle, translateAlong, translateAlongCircle;
    step = 0;
    steps = [];
    stepsflag = [];
    lg = 0;
    pathStartPoint = function(path) {
      var d, dsplitted;
      d = path.attr('d');
      dsplitted = d.split(' ');
      return dsplitted[1].split(',');
    };
    transitionCircle = function(markers, path) {
      var i, j, len, marker, results;
      if (path) {
        results = [];
        for (i = j = 0, len = markers.length; j < len; i = ++j) {
          marker = markers[i];
          results.push(marker.transition().ease('linear').duration(10500).attrTween('style', translateAlongCircle(path.node(), marker, i)).each('end', function() {
            return transitionCircle(markers, path);
          }));
        }
        return results;
      }
    };
    translateAlongCircle = function(path, marker, idx) {
      var cm, l, m, ml, r, rDiff;
      l = path.getTotalLength();
      ml = marker[0][0].getTotalLength();
      m = marker[0][0].getPointAtLength(0 * ml);
      cm = marker[0][0].getPointAtLength(1 * ml);
      r = 0;
      rDiff = Math.random() * (3 - 10) + 3;
      return function(d, i, a) {
        return function(t) {
          var p, pmx, pmy;
          r += rDiff;
          if (steps[idx] > t) {
            p = path.getPointAtLength((steps[idx] - t) * l);
          } else {
            p = path.getPointAtLength((1 + (steps[idx] - t)) * l);
          }
          pmx = p.x - m.x;
          pmy = p.y - m.y;
          return `transform-origin:50% 50%;transform:translate(${pmx}px,${pmy}px) rotate(${r}deg); transition: none; -webkit-transform:translate(${pmx}px,${pmy}px) rotate(${r}deg);-webkit-transform-origin:50% 50%;`;
        };
      };
    };
    transition = function(markers, path) {
      var i, j, len, marker, translate;
      step = 0;
      steps = [];
      if (path) {
        for (i = j = 0, len = markers.length; j < len; i = ++j) {
          marker = markers[i];
          translate = translateAlong(path.node(), marker, markers.length);
          marker.attr('style', '' + translate);
        }
        setTimeout(function() {
          return transitionCircle(markers, path);
        }, 500);
      }
    };
    translateAlong = function(path, marker, count) {
      var cm, l, m, ml, p, pmx, pmy;
      l = path.getTotalLength();
      lg = l;
      step = step + 1 / count;
      steps.push(step);
      stepsflag.push(true);
      p = path.getPointAtLength(step * l);
      ml = marker[0][0].getTotalLength();
      m = marker[0][0].getPointAtLength(0 * ml);
      cm = marker[0][0].getPointAtLength(1 * ml);
      pmx = p.x - m.x;
      pmy = p.y - m.y;
      return `transform:translate(${pmx}px,' + pmy + 'px);-webkit-transform:translate(${pmx}px, ${pmy}px);`;
    };
    rotateWe = function(pathName, elemName) {
      var markers, path, startPoint;
      markers = [];
      path = d3.select('#circle');
      startPoint = pathStartPoint(path);
      $('.fill').each(function(i, elem) {
        return markers.push(d3.select(elem));
      });
      console.log('anim', markers);
      return transition(markers, path);
    };
    return $('.wrapper-hover').hover((function() {
      $(this).addClass('active');
      return rotateWe('circle', '.fill');
    }), function() {
      $(this).removeClass('active');
      return d3.selectAll('.fill').transition().duration(0).each('end', function() {
        return d3.select(this).attr('style', '');
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=coffeescript